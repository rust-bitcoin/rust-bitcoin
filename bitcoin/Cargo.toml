[package]
name = "bitcoin"
version = "0.32.0-rc1"
authors = ["Andrew Poelstra <apoelstra@wpsoftware.net>"]
license = "CC0-1.0"
repository = "https://github.com/rust-bitcoin/rust-bitcoin/"
documentation = "https://docs.rs/bitcoin/"
description = "General purpose library for using and interoperating with Bitcoin."
categories = ["cryptography::cryptocurrencies"]
keywords = [ "crypto", "bitcoin" ]
readme = "../README.md"
edition = "2021"
rust-version = "1.56.1"
exclude = ["tests", "contrib"]

# TODO: If #2833 merges document features in lib.rs
[features]
default = [ "std", "secp-recovery" ]
std = ["internals/std", "primitives/base58-std", "primitives/bech32-std", "primitives/std", "secp256k1/std"]

bitcoinconsensus = ["primitives/bitcoinconsensus"]
bitcoinconsensus-std = ["bitcoinconsensus", "std"]

ordered = ["actual-ordered", "primitives/ordered"]

rand = ["secp256k1/rand"]
rand-std = ["secp256k1/rand-std", "std"]
secp-lowmemory = ["secp256k1/lowmemory"]
secp-recovery = ["secp256k1/recovery"]

serde = ["actual-serde", "internals/serde", "primitives/serde", "secp256k1/serde"]

[dependencies]
internals = { package = "bitcoin-internals", version = "0.3.0", features = ["alloc"] }
primitives = { package = "bitcoin-primitives", version = "0.100.0", default-features = false, features = ["base58", "bech32", "secp256k1"] }
secp256k1 = { package = "secp256k1", version = "0.29.0", default-features = false, features = ["hashes"]}

base64 = { version = "0.22.0", optional = true }

# Do NOT use these dependencies as features! Use the respective feature instead.
actual-ordered = { package = "ordered", version = "0.2.0", optional = true }
actual-serde = { package = "serde", version = "1.0.103", default-features = false, features = [ "derive", "alloc" ], optional = true }

[dev-dependencies]
serde_json = "1.0.0"
serde_test = "1.0.19"
bincode = "1.3.1"
hex_lit = "0.1.1"

[target.'cfg(mutate)'.dev-dependencies]
mutagen = { git = "https://github.com/llogiq/mutagen" }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[example]]
name = "bip32"

[[example]]
name = "handshake"
required-features = ["rand-std"]

[[example]]
name = "ecdsa-psbt"
required-features = ["std", "bitcoinconsensus"]

[[example]]
name = "ecdsa-psbt-simple"
required-features = ["rand-std"]

[[example]]
name = "sign-tx-segwit-v0"
required-features = ["rand-std"]

[[example]]
name = "sign-tx-taproot"
required-features = ["rand-std"]

[[example]]
name = "taproot-psbt"
required-features = ["rand-std", "bitcoinconsensus"]

[[example]]
name = "taproot-psbt-simple"
required-features = ["rand-std"]

[[example]]
name = "sighash"

[lints.rust]
unexpected_cfgs = { level = "deny", check-cfg = ['cfg(bench)', 'cfg(fuzzing)', 'cfg(kani)', 'cfg(mutate)', 'cfg(rust_v_1_60)'] }
